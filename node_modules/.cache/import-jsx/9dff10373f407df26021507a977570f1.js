#!/usr/bin/env NODE_NO_WARNINGS=1 node --loader=import-jsx
import React, { useState, useEffect } from 'react';
import { render, Text } from 'ink';
import SelectInput from 'ink-select-input';
import TextInput from 'ink-text-input';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const Demo = () => {
  const [chatbot, setChatbot] = useState('');
  const [question, setQuestion] = useState();
  const setSelectedChatbot = option => {
    console.log(option);
    setChatbot(option.value);
  };
  const handleSelect = item => {
    console.log('you selected', item);
  };
  const items = [{
    label: 'First',
    value: 'first'
  }, {
    label: 'Second',
    value: 'second'
  }, {
    label: 'Third',
    value: 'third'
  }];
  return _jsxs(_Fragment, {
    children: [_jsx(Text, {
      color: "green",
      children: "What type of chatbot would you like to create?"
    }), _jsx(SelectInput, {
      items: items,
      onSelect: handleSelect
    }), chatbot && _jsx(Text, {
      color: "green",
      children: "Tell me your question"
    }), chatbot && _jsx(TextInput, {
      value: chatbot,
      onChange: setChatbot,
      onSubmit: setSelectedChatbot
    })]
  });
};
render(_jsx(Demo, {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwicmVuZGVyIiwiVGV4dCIsIlNlbGVjdElucHV0IiwiVGV4dElucHV0IiwianN4IiwiX2pzeCIsIkZyYWdtZW50IiwiX0ZyYWdtZW50IiwianN4cyIsIl9qc3hzIiwiRGVtbyIsImNoYXRib3QiLCJzZXRDaGF0Ym90IiwicXVlc3Rpb24iLCJzZXRRdWVzdGlvbiIsInNldFNlbGVjdGVkQ2hhdGJvdCIsIm9wdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJ2YWx1ZSIsImhhbmRsZVNlbGVjdCIsIml0ZW0iLCJpdGVtcyIsImxhYmVsIiwiY2hpbGRyZW4iLCJjb2xvciIsIm9uU2VsZWN0Iiwib25DaGFuZ2UiLCJvblN1Ym1pdCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IE5PREVfTk9fV0FSTklOR1M9MSBub2RlIC0tbG9hZGVyPWltcG9ydC1qc3hcblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIFRleHQgfSBmcm9tICdpbmsnO1xuaW1wb3J0IFNlbGVjdElucHV0IGZyb20gJ2luay1zZWxlY3QtaW5wdXQnO1xuaW1wb3J0IFRleHRJbnB1dCBmcm9tICdpbmstdGV4dC1pbnB1dCc7XG5cblxuY29uc3QgRGVtbyA9ICgpID0+IHtcblx0Y29uc3QgW2NoYXRib3QsIHNldENoYXRib3RdID0gdXNlU3RhdGUoJycpXG5cdGNvbnN0IFtxdWVzdGlvbiwgc2V0UXVlc3Rpb25dID0gdXNlU3RhdGUoKVxuXG5cdGNvbnN0IHNldFNlbGVjdGVkQ2hhdGJvdCA9IChvcHRpb24pID0+IHtcblx0XHRjb25zb2xlLmxvZyhvcHRpb24pXG5cdFx0c2V0Q2hhdGJvdChvcHRpb24udmFsdWUpXG5cdH1cblxuXHRjb25zdCBoYW5kbGVTZWxlY3QgPSBpdGVtID0+IHtcblx0XHRjb25zb2xlLmxvZygneW91IHNlbGVjdGVkJywgaXRlbSlcblx0fTtcblxuXHRjb25zdCBpdGVtcyA9IFtcblx0XHR7XG5cdFx0XHRsYWJlbDogJ0ZpcnN0Jyxcblx0XHRcdHZhbHVlOiAnZmlyc3QnXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRsYWJlbDogJ1NlY29uZCcsXG5cdFx0XHR2YWx1ZTogJ3NlY29uZCdcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiAnVGhpcmQnLFxuXHRcdFx0dmFsdWU6ICd0aGlyZCdcblx0XHR9XG5cdF07XG5cblx0cmV0dXJuIDw+XG5cdFx0PFRleHQgY29sb3I9XCJncmVlblwiPldoYXQgdHlwZSBvZiBjaGF0Ym90IHdvdWxkIHlvdSBsaWtlIHRvIGNyZWF0ZT88L1RleHQ+XG5cdFx0PFNlbGVjdElucHV0IGl0ZW1zPXtpdGVtc30gb25TZWxlY3Q9e2hhbmRsZVNlbGVjdH0gLz5cblx0XHR7Y2hhdGJvdCAmJiA8VGV4dCBjb2xvcj1cImdyZWVuXCI+VGVsbCBtZSB5b3VyIHF1ZXN0aW9uPC9UZXh0PiB9XG5cdFx0e2NoYXRib3QgJiYgPFRleHRJbnB1dCB2YWx1ZT17Y2hhdGJvdH0gb25DaGFuZ2U9e3NldENoYXRib3R9IG9uU3VibWl0PXtzZXRTZWxlY3RlZENoYXRib3R9IC8+fVxuXHQ8Lz5cblxufTtcbnJlbmRlcig8RGVtbyAvPik7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE9BQU9BLEtBQUssSUFBSUMsUUFBUSxFQUFFQyxTQUFTLFFBQVEsT0FBTztBQUNsRCxTQUFTQyxNQUFNLEVBQUVDLElBQUksUUFBUSxLQUFLO0FBQ2xDLE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFDMUMsT0FBT0MsU0FBUyxNQUFNLGdCQUFnQjtBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUFBLFNBQUFDLFFBQUEsSUFBQUMsU0FBQTtBQUFBLFNBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUd2QyxNQUFNQyxJQUFJLEdBQUdBLENBQUEsS0FBTTtFQUNsQixNQUFNLENBQUNDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEdBQUdkLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFDMUMsTUFBTSxDQUFDZSxRQUFRLEVBQUVDLFdBQVcsQ0FBQyxHQUFHaEIsUUFBUSxFQUFFO0VBRTFDLE1BQU1pQixrQkFBa0IsR0FBSUMsTUFBTSxJQUFLO0lBQ3RDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsTUFBTSxDQUFDO0lBQ25CSixVQUFVLENBQUNJLE1BQU0sQ0FBQ0csS0FBSyxDQUFDO0VBQ3pCLENBQUM7RUFFRCxNQUFNQyxZQUFZLEdBQUdDLElBQUksSUFBSTtJQUM1QkosT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxFQUFFRyxJQUFJLENBQUM7RUFDbEMsQ0FBQztFQUVELE1BQU1DLEtBQUssR0FBRyxDQUNiO0lBQ0NDLEtBQUssRUFBRSxPQUFPO0lBQ2RKLEtBQUssRUFBRTtFQUNSLENBQUMsRUFDRDtJQUNDSSxLQUFLLEVBQUUsUUFBUTtJQUNmSixLQUFLLEVBQUU7RUFDUixDQUFDLEVBQ0Q7SUFDQ0ksS0FBSyxFQUFFLE9BQU87SUFDZEosS0FBSyxFQUFFO0VBQ1IsQ0FBQyxDQUNEO0VBRUQsT0FBT1YsS0FBQSxDQUFBRixTQUFBO0lBQUFpQixRQUFBLEdBQ05uQixJQUFBLENBQUNKLElBQUk7TUFBQ3dCLEtBQUssRUFBQyxPQUFPO01BQUFELFFBQUEsRUFBQztJQUE4QyxFQUFPLEVBQ3pFbkIsSUFBQSxDQUFDSCxXQUFXO01BQUNvQixLQUFLLEVBQUVBLEtBQU07TUFBQ0ksUUFBUSxFQUFFTjtJQUFhLEVBQUcsRUFDcERULE9BQU8sSUFBSU4sSUFBQSxDQUFDSixJQUFJO01BQUN3QixLQUFLLEVBQUMsT0FBTztNQUFBRCxRQUFBLEVBQUM7SUFBcUIsRUFBTyxFQUMzRGIsT0FBTyxJQUFJTixJQUFBLENBQUNGLFNBQVM7TUFBQ2dCLEtBQUssRUFBRVIsT0FBUTtNQUFDZ0IsUUFBUSxFQUFFZixVQUFXO01BQUNnQixRQUFRLEVBQUViO0lBQW1CLEVBQUc7RUFBQSxFQUMzRjtBQUVKLENBQUM7QUFDRGYsTUFBTSxDQUFDSyxJQUFBLENBQUNLLElBQUksS0FBRyxDQUFDIn0=