#!/usr/bin/env NODE_NO_WARNINGS=1 node --loader=import-jsx
import React, { useState, useEffect } from 'react';
import { render, Text } from 'ink';
import SelectInput from 'ink-select-input';
import TextInput from 'ink-text-input';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
const Demo = async () => {
  const [chatbot, setChatbot] = useState('');
  const handleSelect = item => {
    console.log('you selected', item);
  };
  const items = [{
    label: 'First',
    value: 'first'
  }, {
    label: 'Second',
    value: 'second'
  }, {
    label: 'Third',
    value: 'third'
  }];
  while (userInput !== ".exit") {
    return _jsxs(_Fragment, {
      children: [_jsx(Text, {
        children: "What type of chatbot would you like to create?"
      }), _jsx(TextInput, {
        value: chatbot,
        onChange: setChatbot
      }), chatbot && _jsx(SelectInput, {
        items: items,
        onSelect: handleSelect
      })]
    });
  }
};
render(_jsx(Demo, {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwicmVuZGVyIiwiVGV4dCIsIlNlbGVjdElucHV0IiwiVGV4dElucHV0IiwianN4IiwiX2pzeCIsIkZyYWdtZW50IiwiX0ZyYWdtZW50IiwianN4cyIsIl9qc3hzIiwiRGVtbyIsImNoYXRib3QiLCJzZXRDaGF0Ym90IiwiaGFuZGxlU2VsZWN0IiwiaXRlbSIsImNvbnNvbGUiLCJsb2ciLCJpdGVtcyIsImxhYmVsIiwidmFsdWUiLCJ1c2VySW5wdXQiLCJjaGlsZHJlbiIsIm9uQ2hhbmdlIiwib25TZWxlY3QiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBOT0RFX05PX1dBUk5JTkdTPTEgbm9kZSAtLWxvYWRlcj1pbXBvcnQtanN4XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBUZXh0IH0gZnJvbSAnaW5rJztcbmltcG9ydCBTZWxlY3RJbnB1dCBmcm9tICdpbmstc2VsZWN0LWlucHV0JztcbmltcG9ydCBUZXh0SW5wdXQgZnJvbSAnaW5rLXRleHQtaW5wdXQnO1xuXG5cblxuY29uc3QgRGVtbyA9IGFzeW5jICgpID0+IHtcblx0Y29uc3QgW2NoYXRib3QsIHNldENoYXRib3RdID0gdXNlU3RhdGUoJycpXG5cblx0Y29uc3QgaGFuZGxlU2VsZWN0ID0gaXRlbSA9PiB7XG5cdFx0Y29uc29sZS5sb2coJ3lvdSBzZWxlY3RlZCcsIGl0ZW0pXG5cdH07XG5cblxuXG5cdGNvbnN0IGl0ZW1zID0gW1xuXHRcdHtcblx0XHRcdGxhYmVsOiAnRmlyc3QnLFxuXHRcdFx0dmFsdWU6ICdmaXJzdCdcblx0XHR9LFxuXHRcdHtcblx0XHRcdGxhYmVsOiAnU2Vjb25kJyxcblx0XHRcdHZhbHVlOiAnc2Vjb25kJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdFx0bGFiZWw6ICdUaGlyZCcsXG5cdFx0XHR2YWx1ZTogJ3RoaXJkJ1xuXHRcdH1cblx0XTtcblxuXHR3aGlsZSAodXNlcklucHV0ICE9PSBcIi5leGl0XCIpIHtcblx0XHRyZXR1cm4gPD5cblx0XHRcdDxUZXh0PldoYXQgdHlwZSBvZiBjaGF0Ym90IHdvdWxkIHlvdSBsaWtlIHRvIGNyZWF0ZT88L1RleHQ+XG5cdFx0XHQ8VGV4dElucHV0IHZhbHVlPXtjaGF0Ym90fSBvbkNoYW5nZT17c2V0Q2hhdGJvdH0gLz5cblx0XHRcdHtjaGF0Ym90ICYmIDxTZWxlY3RJbnB1dCBpdGVtcz17aXRlbXN9IG9uU2VsZWN0PXtoYW5kbGVTZWxlY3R9IC8+fVxuXHRcdDwvPlxuXHR9XG5cdFxufTtcbnJlbmRlcig8RGVtbyAvPik7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE9BQU9BLEtBQUssSUFBSUMsUUFBUSxFQUFFQyxTQUFTLFFBQVEsT0FBTztBQUNsRCxTQUFTQyxNQUFNLEVBQUVDLElBQUksUUFBUSxLQUFLO0FBQ2xDLE9BQU9DLFdBQVcsTUFBTSxrQkFBa0I7QUFDMUMsT0FBT0MsU0FBUyxNQUFNLGdCQUFnQjtBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUFBLFNBQUFDLFFBQUEsSUFBQUMsU0FBQTtBQUFBLFNBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUl2QyxNQUFNQyxJQUFJLEdBQUcsTUFBQUEsQ0FBQSxLQUFZO0VBQ3hCLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFQyxVQUFVLENBQUMsR0FBR2QsUUFBUSxDQUFDLEVBQUUsQ0FBQztFQUUxQyxNQUFNZSxZQUFZLEdBQUdDLElBQUksSUFBSTtJQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxFQUFFRixJQUFJLENBQUM7RUFDbEMsQ0FBQztFQUlELE1BQU1HLEtBQUssR0FBRyxDQUNiO0lBQ0NDLEtBQUssRUFBRSxPQUFPO0lBQ2RDLEtBQUssRUFBRTtFQUNSLENBQUMsRUFDRDtJQUNDRCxLQUFLLEVBQUUsUUFBUTtJQUNmQyxLQUFLLEVBQUU7RUFDUixDQUFDLEVBQ0Q7SUFDQ0QsS0FBSyxFQUFFLE9BQU87SUFDZEMsS0FBSyxFQUFFO0VBQ1IsQ0FBQyxDQUNEO0VBRUQsT0FBT0MsU0FBUyxLQUFLLE9BQU8sRUFBRTtJQUM3QixPQUFPWCxLQUFBLENBQUFGLFNBQUE7TUFBQWMsUUFBQSxHQUNOaEIsSUFBQSxDQUFDSixJQUFJO1FBQUFvQixRQUFBLEVBQUM7TUFBOEMsRUFBTyxFQUMzRGhCLElBQUEsQ0FBQ0YsU0FBUztRQUFDZ0IsS0FBSyxFQUFFUixPQUFRO1FBQUNXLFFBQVEsRUFBRVY7TUFBVyxFQUFHLEVBQ2xERCxPQUFPLElBQUlOLElBQUEsQ0FBQ0gsV0FBVztRQUFDZSxLQUFLLEVBQUVBLEtBQU07UUFBQ00sUUFBUSxFQUFFVjtNQUFhLEVBQUc7SUFBQSxFQUMvRDtFQUNKO0FBRUQsQ0FBQztBQUNEYixNQUFNLENBQUNLLElBQUEsQ0FBQ0ssSUFBSSxLQUFHLENBQUMifQ==